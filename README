Overview:
What problem is this codebase trying to solve?
What high-level assumptions are made in the codebase, either about the background knowledge needed,
about what forms of extensibility are envisioned or are out of scope, or about prerequisites for
using this code?
--------------------------------------------------------------------------------------------------
Quick start: give a short snippet of code showing how a user might get started using this codebase.

--------------------------------------------------------------------------------------------------
Key components: Explain the highest-level components in your system, and what they do.
It is trite and useless to merely say “The model represents the data in my system.
The view represents the rendering of my system. ...”
This is a waste of your time and the reader’s time.
Describe which components “drive” the control-flow of your system, and which ones “are driven”.

--------------------------------------------------------------------------------------------------
Key subcomponents: Within each component, give an overview of the main nouns in your system,
and why they exist and what they are used for.

view package:
    NUPlannerView
        Considering previous assignment implementations we would want an interface to implement
        render, which abstracts how a model is viewed/displayed (text, graphics, etc.)
    NUPlannerTextView
        // PARAMETERIZED MODEL AND VIEW FOR SCHEDULE???????
        toString to be used as a textual aid for correctness with assignment 5
        viewing the schedule as a user's name then listing the day and each event a user has
        for each respective day of the week.
model package:
    eventfields package:
        Day
            An enumeration to represent days of the week, restricting the user to only valid days
        Location
            considers the locations children making sure there is a boolean and string location
        Time
            enforcing military time with hours and minutes, no seconds and not in civilian time
    Central System
        implements the NUPlanner system with its public methods and keeps track of all users,
        and all users schedules in the current system. Has a set of all users contained in the
        system. A list of events in the system.
    Event
        An event in a user's schedule. Has a name of the event, time, location, and list of
        those invited. An enforces the requirements listed by the assignment.
    NUPlannerSystem
        The interface to represent a systems behavior of add, modify, remove, and get all users
        schedules
    Schedule
        A schedule of a user. This contains the users name and the events in their schedule.

--------------------------------------------------------------------------------------------------
Source organization: Either explain for each component where to find it in your codebase,
or explain for each directory in your codebase what components it provides.
Either way, supply the reader with a “map” to your codebase, so they can navigate around.

